@using Microsoft.AspNetCore.Http
@using My.World.Web
@inject IHttpContextAccessor HttpContextAccessor
@model My.World.Web.ViewModel.FlorasViewModel

@{
    ViewData["Title"] = "ViewFloras";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Breadcrumb"] = "Floras / View";
}

<link href="~/css/quill.snow.css" rel="stylesheet" />
<link href="~/css/quill.mention.min.css" rel="stylesheet" />
<link href="~/vendors/dropzone/dropzone.css" rel="stylesheet" />
<style>
    .editorNative {
        min-height: 2em;
        max-height: 8em;
        max-width: 50em;
        margin: 0;
        margin-bottom: 2px;
        border: 1px solid #dedede;
        padding: 1px 0;
        color: black;
        font-weight: 400;
        font-size: 1.125rem;
        font-family: Arial, Helvetica, sans-serif;
        line-height: 2rem;
        background: white;
        border-bottom: 1px solid grey;
    }
</style>
<div class="c-body">
    <main class="c-main">
        <div class="container-fluid">
            <div class="fade-in">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header"><strong>Flora</strong> Details</div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3 col m3">
                                        <div class="card">
                                            <div class="card-header">CATEGORIES</div>
                                            <div class="card-body" style="padding:0;">
                                                <ul id="categoriesTab" class="nav flex-column nav-pills me-3 collection content-tabs" role="tablist">
                                                    @foreach (var cat in Model.ContentTemplate.categories.OrderBy(o => o.Order))
                                                    {
                                                        var active_class = cat.Order == 1 ? "active" : "";
                                                        var panelName = cat.Label + "_panel";
                                                        var tabPanelID = "tab_" + cat.Label + "_panel";
                                                        <li class="nav-item collection-item tab" id="@tabPanelID">
                                                            <a class="d-flex justify-content-between align-items-center @active_class" data-toggle="pill" href="#@panelName" role="tab" aria-controls="home">
                                                                <div>
                                                                    <span>@Html.Raw(@cat.Icon)</span>
                                                                    <span style="margin-left:20px">@cat.Label</span>
                                                                </div>
                                                                <span class="badge badge-pill badge-danger"> 0 %</span>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                        <div class="card">
                                            <div class="card-header">REFERENCES</div>
                                            <div class="card-body" style="padding:0;">
                                                <ul id="referenceTab" class="nav flex-column nav-pills me-3 collection content-tabs" role="tablist">
                                                    @foreach (var cat in Model.ContentTemplate.references.OrderBy(o => o.Order))
                                                    {
                                                        var active_class = cat.Order == 1 ? "active" : "";
                                                        var panelName = cat.Label + "_panel";
                                                        var tabPanelID = "tab_" + cat.Label + "_panel";
                                                        <li class="nav-item collection-item tab" id="@tabPanelID">
                                                            <a class="d-flex justify-content-between align-items-center @active_class" data-toggle="pill" href="#@panelName" role="tab" aria-controls="home">
                                                                <div>
                                                                    <span>@Html.Raw(@cat.Icon)</span>
                                                                    <span style="margin-left:20px">@cat.Label</span>
                                                                </div>
                                                                <span class="badge badge-pill badge-danger"> 0 %</span>
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="align-items-start">
                                            <div id="tabContent" class="tab-content">
                                                @foreach (var cat in Model.ContentTemplate.categories)
                                                {
                                                    var active_class = cat.Order == 1 ? "active" : "";
                                                    var panelName = cat.Label + "_panel";

                                                    <div class="tab-pane @active_class" id="@panelName" role="tabpanel">
                                                        <div class="card">
                                                            <div class="card-header d-flex justify-content-between align-items-center" style="background:@Model.headerBackgroundColor">
                                                                <span>@cat.Label</span>
                                                                <span>@Html.Raw(@cat.Icon)</span>
                                                            </div>
                                                            <div class="card-body" style="padding:10px;">
                                                                @foreach (var att in cat.Attributes)
                                                                {
                                                                    if (att.is_active)
                                                                    {
                                                                    <div class="form-group row">
                                                                        <label class="col-md-3 col-form-label" for="text-input">@att.field_label</label>
                                                                        <div class="col-md-9">
                                                                            @if (att.field_name.ToLower() != "name" && att.field_type.In(new List<string>() { "binary", "varbinary", "tinyblob", "blob", "mediumblob", "longblob", "char byte", "char", "varchar", "tinytext", "text", "mediumtext", "longtext", "set", "enum", "nchar", "national char", "nvarchar", "national varchar", "character varying" }))
                                                                                {
                                                                                <div id="@att.field_name" class="form-control editorNative"></div>
                                                                                }
                                                                                else if (att.field_name.ToLower() == "universe")
                                                                                {
                                                                                <select id="ddlUniverseList" class="form-control" style="min-width:150px"
                                                                                        asp-items="@(new SelectList(@Model.UniversesList, "id", "name" , Model.florasModel.Universe))"
                                                                                        onchange="UniverseSelected();">
                                                                                </select>
                                                                                }
                                                                                else if (att.field_type.In(new List<string>
                                                                                    () { "int", "integer", "smallint unsigned", "mediumint", "bigint", "int unsigned", "integer unsigned", "bit" }))
                                                                                    {
                                                                                    <input id="florasModel_@att.field_name" class="form-control" type="number" />
                                                                                    }
                                                                                    else if (att.field_type.In(new List<string>
                                                                                        () { "tinyint" }))
                                                                                        {
                                                                                        <input id="florasModel_@att.field_name" class="form-control" type="checkbox" />
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                        <input id="florasModel_@att.field_name" class="form-control" />

                                                                                        }
                                                                        </div>
                                                                    </div>
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                }


                                                @foreach (var cat in Model.ContentTemplate.references)
                                                {
                                                    var active_class = cat.Order == 1 ? "active" : "";
                                                    var panelName = cat.Label + "_panel";

                                                    <div class="tab-pane @active_class" id="@panelName" role="tabpanel">
                                                        <div class="card">
                                                            <div class="card-header d-flex justify-content-between align-items-center" style="background:cadetblue">
                                                                <span>@cat.Label</span>
                                                                <span>@Html.Raw(@cat.Icon)</span>
                                                            </div>
                                                            <div class="card-body" style="padding:10px;">
                                                                @foreach (var att in cat.Attributes)
                                                                {
                                                                    if (att.is_active)
                                                                    {
                                                                        if (att.field_name.ToLower() == "gallery")
                                                                        {
                                                                            <div class="mb-3">
                                                                                <label class="form-label">Uploaded Images</label>

                                                                                <div class="row">
                                                                                    @foreach (var contentObject in Model.ContentObjectModelList)
                                                                                    {
                                                                                        <div class="card-img" style="width: 18rem;margin-right: 1.5rem;">
                                                                                            <div class="card-body img-container" style="height: 265px;background: url('@contentObject.file_url');background-size: cover;">
                                                                                                <a class="remove-image" style="display: inline;"
                                                                                                   asp-controller="floras" asp-action="DeleteAttachment" asp-route-objectId="@contentObject.object_id" asp-route-objectName="@contentObject.object_name">&#215;</a>
                                                                                            </div>
                                                                                        </div>
                                                                                    }
                                                                                </div>
                                                                            </div>
                                                                            <div class="mb-3">
                                                                                <div class="row">
                                                                                    <h3><label class="form-label"> Only @Model.RemainingContentSize is left for content upload.</label></h3>
                                                                                </div>
                                                                            </div>
                                                                            <div class="mb-3">
                                                                                <label class="form-label" for="exampleFormControlInput1">Upload Images...</label>
                                                                                <div>
                                                                                    @using (Html.BeginForm("UploadAttachment", "floras", FormMethod.Post, new { @class = "", @name = "myDropzone", id = "myDropzone", @enctype = "multipart/form-data" }))
                                                                                    {
                                                                                    <div class="dz-message needsclick">
                                                                                        <button type="button" class="dz-button">Drop files here or click to upload.</button><br />
                                                                                        <span class="note needsclick"></span>
                                                                                    </div>
                                                                                    <div class="fallback">
                                                                                        <input name="postedfiles" type="file" multiple />
                                                                                    </div>
                                                                                    <div>
                                                                                        @*<input type="submit" id="Submit" name="Submit" class="btn btn-success m-t-5" value="Submit" />*@
                                                                                    </div>
                                                                                    }

                                                                                    <a href="#" id="saveAttchbtn" name="saveAttchbtn" class="btn btn-primary">Upload</a>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    }

                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>

<div id="preview-template" style="display: none;">
    <div class="dz-preview dz-file-preview">
        <div class="dz-image">
            <img data-dz-thumbnail />
        </div>
        <div class="dz-details">
            <div class="dz-size">
                <span data-dz-size />
            </div>
            <div class="dz-filename">
                <span data-dz-name />
            </div>
        </div>
        <div class="dz-progress">
            <span class="dz-upload" data-dz-uploadprogress />
        </div>
        <div class="dz-error-message">
            <span data-dz-errormessage />
        </div>
        <div class="dz-success-mark">
            <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                 xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">
                <!-- Generator: Sketch 3.2.1 (9971) - http://www.bohemiancoding.com/sketch -->
                <title>Check</title>
                <desc>Created with Sketch.</desc>
                <defs />
                <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">
                    <path d="M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" stroke-opacity="0.198794158" stroke="#747474" fill-opacity="0.816519475" fill="#FFFFFF" sketch:type="MSShapeGroup" />
                </g>
            </svg>
        </div>
        <div class="dz-error-mark">
            <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                 xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">
                <!-- Generator: Sketch 3.2.1 (9971) - http://www.bohemiancoding.com/sketch -->
                <title>error</title>
                <desc>Created with Sketch.</desc>
                <defs />
                <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">
                    <g id="Check-+-Oval-2" sketch:type="MSLayerGroup" stroke="#747474" stroke-opacity="0.198794158" fill="#FFFFFF" fill-opacity="0.816519475">
                        <path d="M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" sketch:type="MSShapeGroup" />
                    </g>
                </g>
            </svg>
        </div>
    </div>
</div>

<div id="contentsExceededModal" bsmodal="" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" class="modal fade" aria-modal="true" style="display: none;">
    <div role="document" class="modal-dialog modal-danger modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Alert !</h4>
                <button type="button" aria-label="Close" data-dismiss="modal" class="close">
                    <span aria-hidden="true">�</span>
                </button>
            </div>
            <div class="modal-body">
                <h4>You have Exceeded the maximum allowed size of @My.World.Web.Helpers.Utility.SizeSuffix(Convert.ToInt64(@HttpContextAccessor.HttpContext.Session.GetString("AllowedTotalContentSize"))) per content to upload images.</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/quill.js"></script>
    <script src="~/js/quill.mention.min.js"></script>
    <script src="~/js/FlorasEditor.js"></script>
    <script src="~/js/common.js"></script>
    <script src="~/vendors/dropzone/dropzone.js"></script>

    <script type="text/javascript">

        			function setTagsBody() {
			    Tags_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Tags'));
			    $('#Tags').focusout(function () {
			        postSaveEditorData('Tags', Tags_editor.root.innerHTML);
			    });
			};

			function setUniverseBody() {
			    $('#florasModel_Universe').val('@Model.florasModel.Universe');
			};

			function setNameBody() {
			    $('#florasModel_Name').val('@Model.florasModel.Name');
			};

			function setOther_NamesBody() {
			    Other_Names_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Other_Names'));
			    $('#Other_Names').focusout(function () {
			        postSaveEditorData('Other_Names', Other_Names_editor.root.innerHTML);
			    });
			};

			function setDescriptionBody() {
			    Description_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Description'));
			    $('#Description').focusout(function () {
			        postSaveEditorData('Description', Description_editor.root.innerHTML);
			    });
			};

			function setOrderBody() {
			    Order_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Order'));
			    $('#Order').focusout(function () {
			        postSaveEditorData('Order', Order_editor.root.innerHTML);
			    });
			};

			function setRelated_floraBody() {
			    Related_flora_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Related_flora'));
			    $('#Related_flora').focusout(function () {
			        postSaveEditorData('Related_flora', Related_flora_editor.root.innerHTML);
			    });
			};

			function setGenusBody() {
			    Genus_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Genus'));
			    $('#Genus').focusout(function () {
			        postSaveEditorData('Genus', Genus_editor.root.innerHTML);
			    });
			};

			function setFamilyBody() {
			    Family_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Family'));
			    $('#Family').focusout(function () {
			        postSaveEditorData('Family', Family_editor.root.innerHTML);
			    });
			};

			function setSizeBody() {
			    Size_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Size'));
			    $('#Size').focusout(function () {
			        postSaveEditorData('Size', Size_editor.root.innerHTML);
			    });
			};

			function setSmellBody() {
			    Smell_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Smell'));
			    $('#Smell').focusout(function () {
			        postSaveEditorData('Smell', Smell_editor.root.innerHTML);
			    });
			};

			function setTasteBody() {
			    Taste_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Taste'));
			    $('#Taste').focusout(function () {
			        postSaveEditorData('Taste', Taste_editor.root.innerHTML);
			    });
			};

			function setColoringsBody() {
			    Colorings_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Colorings'));
			    $('#Colorings').focusout(function () {
			        postSaveEditorData('Colorings', Colorings_editor.root.innerHTML);
			    });
			};

			function setFruitsBody() {
			    Fruits_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Fruits'));
			    $('#Fruits').focusout(function () {
			        postSaveEditorData('Fruits', Fruits_editor.root.innerHTML);
			    });
			};

			function setMagical_effectsBody() {
			    Magical_effects_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Magical_effects'));
			    $('#Magical_effects').focusout(function () {
			        postSaveEditorData('Magical_effects', Magical_effects_editor.root.innerHTML);
			    });
			};

			function setMaterial_usesBody() {
			    Material_uses_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Material_uses'));
			    $('#Material_uses').focusout(function () {
			        postSaveEditorData('Material_uses', Material_uses_editor.root.innerHTML);
			    });
			};

			function setMedicinal_purposesBody() {
			    Medicinal_purposes_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Medicinal_purposes'));
			    $('#Medicinal_purposes').focusout(function () {
			        postSaveEditorData('Medicinal_purposes', Medicinal_purposes_editor.root.innerHTML);
			    });
			};

			function setBerriesBody() {
			    Berries_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Berries'));
			    $('#Berries').focusout(function () {
			        postSaveEditorData('Berries', Berries_editor.root.innerHTML);
			    });
			};

			function setNutsBody() {
			    Nuts_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Nuts'));
			    $('#Nuts').focusout(function () {
			        postSaveEditorData('Nuts', Nuts_editor.root.innerHTML);
			    });
			};

			function setSeedsBody() {
			    Seeds_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Seeds'));
			    $('#Seeds').focusout(function () {
			        postSaveEditorData('Seeds', Seeds_editor.root.innerHTML);
			    });
			};

			function setSeasonalityBody() {
			    Seasonality_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Seasonality'));
			    $('#Seasonality').focusout(function () {
			        postSaveEditorData('Seasonality', Seasonality_editor.root.innerHTML);
			    });
			};

			function setLocationsBody() {
			    Locations_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Locations'));
			    $('#Locations').focusout(function () {
			        postSaveEditorData('Locations', Locations_editor.root.innerHTML);
			    });
			};

			function setReproductionBody() {
			    Reproduction_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Reproduction'));
			    $('#Reproduction').focusout(function () {
			        postSaveEditorData('Reproduction', Reproduction_editor.root.innerHTML);
			    });
			};

			function setEaten_byBody() {
			    Eaten_by_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Eaten_by'));
			    $('#Eaten_by').focusout(function () {
			        postSaveEditorData('Eaten_by', Eaten_by_editor.root.innerHTML);
			    });
			};

			function setNotesBody() {
			    Notes_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Notes'));
			    $('#Notes').focusout(function () {
			        postSaveEditorData('Notes', Notes_editor.root.innerHTML);
			    });
			};

			function setPrivate_NotesBody() {
			    Private_Notes_editor.clipboard.dangerouslyPasteHTML(htmlDecode('@Model.florasModel.Private_Notes'));
			    $('#Private_Notes').focusout(function () {
			        postSaveEditorData('Private_Notes', Private_Notes_editor.root.innerHTML);
			    });
			};



        $(document).ready(function () {
            			$('#florasModel_Name').blur(function() {
			    postSaveData('Name', $('#florasModel_Name').val());
			});



            Dropzone.autoDiscover = false;
            Dropzone.options.myDropzone = false;

            $('#myDropzone').dropzone({
                previewTemplate: document.querySelector('#preview-template').innerHTML,
                paramName: "files",
                autoProcessQueue: false,
                uploadMultiple: true,
                parallelUploads: 100,
                maxFiles: 100,
                maxFilesize: 100,//max file size in MB,
                addRemoveLinks: true,
                dictResponseError: 'Server not Configured',
                thumbnail: function (file, dataUrl) {
                    if (file.previewElement) {
                        file.previewElement.classList.remove("dz-file-preview");
                        var images = file.previewElement.querySelectorAll("[data-dz-thumbnail]");
                        for (var i = 0; i < images.length; i++) {
                            var thumbnailElement = images[i];
                            thumbnailElement.alt = file.name;
                            thumbnailElement.src = dataUrl;
                        }
                        setTimeout(function () { file.previewElement.classList.add("dz-image-preview"); }, 1);
                    }
                },
                acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg,.pdf",// use this to restrict file type
                init: function () {
                    var self = this;
                    // config
                    self.options.addRemoveLinks = true;
                    self.options.dictRemoveFile = "Delete";
                    //New file added
                    self.on("addedfile", function (file) {
                        console.log('new file added ', file);
                        $('.dz-success-mark').hide();
                        $('.dz-error-mark').hide();
                    });
                    // Send file starts
                    self.on("sending", function (file) {
                        console.log('upload started', file);
                        $('.meter').show();
                    });

                    // File upload Progress
                    self.on("totaluploadprogress", function (progress) {
                        console.log("progress ", progress);
                        $('.roller').width(progress + '%');
                    });

                    self.on('error', function (file, response) {
                        console.log("Files upload Error");
                        showModal(response.message);
                    });
                    self.on('success', function () {
                        self.on("queuecomplete", function () {
                            $('.meter').delay(999).slideUp(999);
                            console.log("Files uploaded");
                            var locUrL = location.href.replace('#Gallery_panel', '') + "#Gallery_panel";
                            window.location.href = locUrL;
                            location.reload();
                        });
                    });
                    self.on("complete", function (file) {
                        self.removeFile(file);
                    });
                    // On removing file
                    self.on("removedfile", function (file) {
                        console.log(file);
                    });

                    $('#saveAttchbtn').on("click", function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        // Validate form here if needed

                        if (self.getQueuedFiles().length > 0) {
                            self.processQueue();

                        } else {
                            self.uploadFiles([]);
                            $('#myDropzone').submit();
                        }

                    });

                    self.on("successmultiple", function (files, response) {
                        // Gets triggered when the files have successfully been sent.
                        // Redirect user or notify of success.

                    });
                }
            });

            $('#myDropzone').addClass("dropzone");

            if (window.location.hash) {
                var idPrefix = "tab_";
                var panelName = window.location.hash.replace('#', '');
                var liElement = $('#' + idPrefix + panelName);
                var tabContentEle = $('#' + panelName);

                if (liElement != undefined) {
                    $('#tabContent').find('div').removeClass('active');
                    $('#categoriesTab').find('li').find('a').removeClass('active');
                    $('#referenceTab').find('li').find('a').removeClass('active');
                    liElement.find('a').addClass('active');
                    tabContentEle.addClass('active');
                    console.log(liElement);
                }
            }
        });

        function postSaveData(type, value) {
            var url = '/Floras/Save' + type;

            $.ajax({
                type: 'POST',
                url: url,
                data: '{ FloraID : "' + @ViewData["FloraID"] + '", value : "' + value + '" }',
                    dataType: "json",
                        contentType: "application/json; charset=utf-8",
                            success: function (result) {
                                if (result.isSuccess) {

                                }
                                else {
                                    $.alert({
                                        title: 'Error',
                                        icon: 'fa fa-warning',
                                        type: 'red',
                                        content: '<hr>' + result.message + '</hr>',
                                    });
                                }
                            },
            error: function (error) {
                $.alert({
                    title: 'Error',
                    icon: 'fa fa-warning',
                    type: 'red',
                    content: '<hr>' + error + '</hr>',
                });
            }
        });
        }


        function postSaveEditorData(type, value) {
            var url = '/Floras/' + @ViewData["FloraID"] + '/Save' + type;

            $.ajax({
                type: 'POST',
                url: url,
                data: value,
                async: false,
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    if (result.isSuccess) {

                    }
                    else {
                        $.alert({
                            title: 'Error',
                            icon: 'fa fa-warning',
                            type: 'red',
                            content: '<hr>' + result.message + '</hr>',
                        });
                    }
                },
                error: function (error) {
                    $.alert({
                        title: 'Error',
                        icon: 'fa fa-warning',
                        type: 'red',
                        content: '<hr>' + error + '</hr>',
                    });
                }
            });
        }

    </script>
}